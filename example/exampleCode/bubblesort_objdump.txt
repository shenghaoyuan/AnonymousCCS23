
bubblesort.o:	file format ELF64-BPF


Disassembly of section .text:

0000000000000000 bubblesort:
; void bubblesort(int arr[], int size) {
       0:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
;   for (i = 0;  i < size-1; i++) {
       1:	bc 23 00 00 00 00 00 00	w3 = w2
       2:	67 03 00 00 20 00 00 00	r3 <<= 32
       3:	c7 03 00 00 20 00 00 00	r3 s>>= 32
       4:	c5 03 23 00 02 00 00 00	if r3 s< 2 goto +35 <LBB0_8>
       5:	b4 03 00 00 00 00 00 00	w3 = 0
       6:	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 8)
       7:	07 01 00 00 04 00 00 00	r1 += 4
       8:	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 16) = r1
       9:	bc 25 00 00 00 00 00 00	w5 = w2
      10:	04 05 00 00 ff ff ff ff	w5 += -1
      11:	bc 50 00 00 00 00 00 00	w0 = w5

0000000000000060 LBB0_2:
;     for (j = 0; j < size - i-1; j++) {
      12:	bc 36 00 00 00 00 00 00	w6 = w3
      13:	a4 06 00 00 ff ff ff ff	w6 ^= -1
      14:	0c 26 00 00 00 00 00 00	w6 += w2
      15:	67 06 00 00 20 00 00 00	r6 <<= 32
      16:	c7 06 00 00 20 00 00 00	r6 s>>= 32
      17:	c5 06 13 00 01 00 00 00	if r6 s< 1 goto +19 <LBB0_7>
;       if (arr[j] > arr[j+1]) {
      18:	79 a1 f8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 8)
      19:	61 18 00 00 00 00 00 00	r8 = *(u32 *)(r1 + 0)
      20:	bf 06 00 00 00 00 00 00	r6 = r0
      21:	79 a7 f0 ff 00 00 00 00	r7 = *(u64 *)(r10 - 16)

00000000000000b0 LBB0_4:
      22:	bc 84 00 00 00 00 00 00	w4 = w8
      23:	67 04 00 00 20 00 00 00	r4 <<= 32
      24:	c7 04 00 00 20 00 00 00	r4 s>>= 32
      25:	61 79 00 00 00 00 00 00	r9 = *(u32 *)(r7 + 0)
      26:	bc 91 00 00 00 00 00 00	w1 = w9
      27:	67 01 00 00 20 00 00 00	r1 <<= 32
      28:	c7 01 00 00 20 00 00 00	r1 s>>= 32
      29:	dd 14 03 00 00 00 00 00	if r4 s<= r1 goto +3 <LBB0_6>
;         arr[j+1] = tmp;
      30:	63 87 00 00 00 00 00 00	*(u32 *)(r7 + 0) = r8
;         arr[j] = arr[j+1];
      31:	63 97 fc ff 00 00 00 00	*(u32 *)(r7 - 4) = r9
      32:	bc 89 00 00 00 00 00 00	w9 = w8

0000000000000108 LBB0_6:
;     for (j = 0; j < size - i-1; j++) {
      33:	07 07 00 00 04 00 00 00	r7 += 4
      34:	07 06 00 00 ff ff ff ff	r6 += -1
;       if (arr[j] > arr[j+1]) {
      35:	bc 98 00 00 00 00 00 00	w8 = w9
;     for (j = 0; j < size - i-1; j++) {
      36:	55 06 f1 ff 00 00 00 00	if r6 != 0 goto -15 <LBB0_4>

0000000000000128 LBB0_7:
;   for (i = 0;  i < size-1; i++) {
      37:	04 00 00 00 ff ff ff ff	w0 += -1
      38:	04 03 00 00 01 00 00 00	w3 += 1
      39:	5d 53 e4 ff 00 00 00 00	if r3 != r5 goto -28 <LBB0_2>

0000000000000140 LBB0_8:
; }
      40:	95 00 00 00 00 00 00 00	exit
